{{- if and .Values.auth.enabled .Values.auth.createSecret.enabled (not .Values.auth.existingSecret.enabled) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kafka-schema-registry-mcp.oauth2SecretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kafka-schema-registry-mcp.labels" . | nindent 4 }}
  {{- include "kafka-schema-registry-mcp.annotations" . | nindent 4 }}
type: Opaque
stringData:
  client-id: {{ .Values.auth.createSecret.clientId | quote }}
  client-secret: {{ .Values.auth.createSecret.clientSecret | quote }}
---
{{- end }}

{{- if and (or .Values.schemaRegistry.user .Values.schemaRegistry.password) (not .Values.schemaRegistry.existingSecret.enabled) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kafka-schema-registry-mcp.schemaRegistrySecretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kafka-schema-registry-mcp.labels" . | nindent 4 }}
  {{- include "kafka-schema-registry-mcp.annotations" . | nindent 4 }}
type: Opaque
stringData:
  {{- if .Values.schemaRegistry.user }}
  username: {{ .Values.schemaRegistry.user | quote }}
  {{- end }}
  {{- if .Values.schemaRegistry.password }}
  password: {{ .Values.schemaRegistry.password | quote }}
  {{- end }}
{{- end }} 
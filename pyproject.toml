[project]
name = "kafka-schema-registry-mcp"
version = "1.7.0"
description = "A Model Context Protocol (MCP) server for Kafka Schema Registry - enables AI assistants to interact with Kafka schemas through a standardized interface"
authors = [
    {name = "Kafka Schema Registry MCP Team", email = ""},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "aiofiles>=23.2.1,<25.0.0",
    "httpx>=0.25.2",
    "mcp[cli]>=0.9.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/aywengo/kafka-schema-reg-mcp"
Repository = "https://github.com/aywengo/kafka-schema-reg-mcp"
Issues = "https://github.com/aywengo/kafka-schema-reg-mcp/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "oauth_provider.py",
    "schema_registry_common.py",
    "core_registry_tools.py",
    "task_management.py",
    "batch_operations.py",
    "statistics_tools.py",
    "export_tools.py",
    "comparison_tools.py",
    "migration_tools.py",
    "mcp_prompts.py",
    "kafka_schema_registry_unified_mcp.py",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
pythonpath = [
    ".",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true 
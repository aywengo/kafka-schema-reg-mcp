services:
  # First Kafka Cluster (Development)
  kafka-dev:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka-dev
    container_name: kafka-dev
    ports:
      - "39092:9092"
      - "39094:9094"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-dev:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-dev:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: "v-qDsAQhRMOEe3xNzCmBuQ"
      KAFKA_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS: 60000
    command: >
      bash -c "
        echo 'Waiting for Kafka DEV to be ready...' &&
        /etc/confluent/docker/run"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - kafka-multi-test

  # Second Kafka Cluster (Production)
  kafka-prod:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka-prod
    container_name: kafka-prod
    ports:
      - "39093:9093"
      - "39095:9095"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 2@kafka-prod:9095
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,CONTROLLER://0.0.0.0:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-prod:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: "RSpshNlPRv24_B5BA8G08w"
      KAFKA_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS: 60000
    command: >
      bash -c "
        echo 'Waiting for Kafka PROD to be ready...' &&
        /etc/confluent/docker/run"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9093", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - kafka-multi-test

  # Development Schema Registry
  schema-registry-dev:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry-dev
    container_name: schema-registry-dev
    depends_on:
      kafka-dev:
        condition: service_healthy
    ports:
      - "38081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-dev
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-dev:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DELETE_SUBJECT_ENABLED: "true"
      SCHEMA_REGISTRY_DELETE_VERSION_ENABLED: "true"
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: "backward"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - kafka-multi-test

  # Production Schema Registry  
  schema-registry-prod:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry-prod
    container_name: schema-registry-prod
    depends_on:
      kafka-prod:
        condition: service_healthy
    ports:
      - "38082:8082"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-prod
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-prod:9093
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8082
      SCHEMA_REGISTRY_DELETE_SUBJECT_ENABLED: "true"
      SCHEMA_REGISTRY_DELETE_VERSION_ENABLED: "true"
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: "forward"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/subjects"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - kafka-multi-test

  # AKHQ UI for Both Clusters
  akhq-multi:
    image: tchiotludo/akhq:0.25.1
    depends_on:
      - schema-registry-dev
      - schema-registry-prod
      - kafka-dev
      - kafka-prod
    ports:
      - "38080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            development:
              properties:
                bootstrap.servers: "kafka-dev:9092"
              schema-registry:
                url: "http://schema-registry-dev:8081"
            production:
              properties:
                bootstrap.servers: "kafka-prod:9093"
              schema-registry:
                url: "http://schema-registry-prod:8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s 
    networks:
      - kafka-multi-test

  # Multi-Registry MCP Server for Testing
  mcp-server-multi:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: mcp-server-multi
    ports:
      - "8000:8000"
    environment:
      # Registry 1: Development
      SCHEMA_REGISTRY_NAME_1: development
      SCHEMA_REGISTRY_URL_1: http://schema-registry-dev:8081
      SCHEMA_REGISTRY_USER_1: ""
      SCHEMA_REGISTRY_PASSWORD_1: ""
      READONLY_1: "false"
      
      # Registry 2: Production (Read-only for safety)
      SCHEMA_REGISTRY_NAME_2: production
      SCHEMA_REGISTRY_URL_2: http://schema-registry-prod:8082
      SCHEMA_REGISTRY_USER_2: ""
      SCHEMA_REGISTRY_PASSWORD_2: ""
      READONLY_2: "true"
    depends_on:
      - schema-registry-dev
      - schema-registry-prod
    stdin_open: true
    tty: true
    networks:
      - kafka-multi-test

networks:
  kafka-multi-test:
    driver: bridge
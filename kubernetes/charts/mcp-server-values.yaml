# MCP Server Values for Published Helm Chart
# Configuration for kafka-mcp/kafka-schema-registry-mcp chart

# Image configuration (override for local development)
image:
  repository: kafka-schema-reg-mcp
  tag: local
  pullPolicy: Never  # Use local image built by Kind

# Service configuration
service:
  type: NodePort
  port: 8000
  targetPort: 8000
  nodePort: 38000
  annotations: {}

# Environment variables
env:
  - name: SCHEMA_REGISTRY_URL
    value: "http://schema-registry.kafka-system.svc.cluster.local:8081"
  - name: SCHEMA_REGISTRY_USER
    value: ""
  - name: SCHEMA_REGISTRY_PASSWORD
    value: ""
  - name: PYTHONUNBUFFERED
    value: "1"
  - name: PYTHONDONTWRITEBYTECODE
    value: "1"

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: 8000
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 3

# Security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Ingress (disabled for local development)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: mcp-server.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels:
  app: mcp-server
  version: local 
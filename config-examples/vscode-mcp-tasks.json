{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start MCP Server (Docker)",
            "type": "shell",
            "command": "docker",
            "args": [
                "run", "--rm", "-d",
                "--name", "kafka-schema-mcp",
                "--network", "host",
                "-e", "SCHEMA_REGISTRY_URL=http://localhost:8081",
                "aywengo/kafka-schema-reg-mcp:stable"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "Start Multi-Registry MCP Server",
            "type": "shell",
            "command": "docker",
            "args": [
                "run", "--rm", "-d",
                "--name", "kafka-schema-mcp-multi",
                "--network", "host",
                "-e", "SCHEMA_REGISTRY_NAME_1=development",
                "-e", "SCHEMA_REGISTRY_URL_1=http://localhost:8081",
                "-e", "VIEWONLY_1=false",
                "-e", "SCHEMA_REGISTRY_NAME_2=production",
                "-e", "SCHEMA_REGISTRY_URL_2=http://localhost:8083",
                "-e", "VIEWONLY_2=true",
                "aywengo/kafka-schema-reg-mcp:stable"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "Stop MCP Server",
            "type": "shell", 
            "command": "docker",
            "args": ["stop", "kafka-schema-mcp", "kafka-schema-mcp-multi"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "Test MCP Connection",
            "type": "shell",
            "command": "echo",
            "args": [
                "'Testing MCP connection...' && docker exec kafka-schema-mcp python -c \"import sys; print('MCP server is running')\""
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "Start Schema Registry Services",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "-d", "schema-registry", "kafka", "zookeeper"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "Register Schema from Current File",
            "type": "shell",
            "command": "echo",
            "args": [
                "'Registering schema from ${file}...'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            },
            "dependsOn": "Start MCP Server (Docker)"
        },
        {
            "label": "Export Schemas",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p", "exports",
                "&&", "echo", "'Exporting schemas to exports/ directory...'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "List All Schema Subjects",
            "type": "shell",
            "command": "echo",
            "args": [
                "'Listing all schema subjects via MCP...'"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        }
    ]
} 